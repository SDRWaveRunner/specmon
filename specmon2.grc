options:
  parameters:
    author: PE1RIK
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: no_gui
    hier_block_src_path: '.:'
    id: specmon2
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: run
    sizing_mode: fixed
    thread_safe_setters: ''
    title: ''
    window_size: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: fhandler
  id: variable
  parameters:
    comment: ''
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1232, 164.0]
    rotation: 0
    state: true
- name: intcount
  id: variable
  parameters:
    comment: 'Integration count.

      Also used for normalisation


      vector_rate is vectors per second


      intcount = samp_rate/(fftsize * vector_rate)


      Bij vector_rate = 5 (200ms):


      intcount = samp_rate/(fftsize * 5)'
    value: int(samp_rate/(fftsize * 5))
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [880, 316.0]
    rotation: 0
    state: enabled
- name: start_state
  id: variable
  parameters:
    comment: ''
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [624, 368]
    rotation: 0
    state: enabled
- name: bbgain
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: BB-Gain
    short_id: b
    type: intx
    value: '30'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [632, 32]
    rotation: 0
    state: enabled
- name: blocks_add_xx_0
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [240, 536]
    rotation: 180
    state: enabled
- name: blocks_complex_to_mag_squared_0
  id: blocks_complex_to_mag_squared
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1080, 544]
    rotation: 180
    state: enabled
- name: blocks_file_sink_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: 'Debug option to save vector before

      calibration and specmon2 logics'
    file: '"/tmp/" + time.strftime("%y%m%d-%H%M") + "-" + str(int(freq)) + "-" + str(int(samp_rate))
      + "-" + str(fftsize) + ".pvector"'
    type: float
    unbuffered: 'False'
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 680]
    rotation: 180
    state: enabled
- name: blocks_file_source_0
  id: blocks_file_source
  parameters:
    affinity: ''
    alias: ''
    begin_tag: pmt.PMT_NIL
    comment: ''
    file: calibvec
    length: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    repeat: 'True'
    type: float
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [464, 696]
    rotation: 180
    state: enabled
- name: blocks_head_0
  id: blocks_head
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: int(runtime*samp_rate)
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [320, 232.0]
    rotation: 0
    state: enabled
- name: blocks_integrate_xx_0
  id: blocks_integrate_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: intcount
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [880, 536]
    rotation: 180
    state: enabled
- name: blocks_moving_average_xx_0
  id: blocks_moving_average_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    length: '500'
    max_iter: '4000'
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: 1.0/500
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [472, 288.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: Normalize integrated vectors
    const: '[1.0/intcount]*fftsize'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [648, 536]
    rotation: 180
    state: enabled
- name: blocks_nlog10_ff_0
  id: blocks_nlog10_ff
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    k: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    n: '10'
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 532]
    rotation: 180
    state: enabled
- name: blocks_stream_to_vector_0
  id: blocks_stream_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: fftsize
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [832, 248]
    rotation: 0
    state: enabled
- name: blocks_sub_xx_0
  id: blocks_sub_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [656, 224]
    rotation: 0
    state: enabled
- name: calibvec
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Calibration Vector
    short_id: c
    type: str
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 656]
    rotation: 0
    state: enabled
- name: deviceid
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Device ID
    short_id: d
    type: str
    value: '"rtl=00000201"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [240, 32]
    rotation: 0
    state: enabled
- name: fft_vxx_0
  id: fft_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_size: fftsize
    forward: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    shift: 'True'
    type: complex
    window: window.blackmanharris(fftsize)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1024, 216]
    rotation: 0
    state: enabled
- name: fftsize
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: FFT size
    short_id: F
    type: intx
    value: '1024'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [856, 652]
    rotation: 0
    state: enabled
- name: freq
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Frequency
    short_id: f
    type: eng_float
    value: 145e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [392, 32]
    rotation: 0
    state: enabled
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: "Required when not \nusing osmocom source"
    imports: import time
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 680]
    rotation: 0
    state: enabled
- name: osmosdr_source_0
  id: osmosdr_source
  parameters:
    affinity: ''
    alias: ''
    ant0: ''
    ant1: ''
    ant10: ''
    ant11: ''
    ant12: ''
    ant13: ''
    ant14: ''
    ant15: ''
    ant16: ''
    ant17: ''
    ant18: ''
    ant19: ''
    ant2: ''
    ant20: ''
    ant21: ''
    ant22: ''
    ant23: ''
    ant24: ''
    ant25: ''
    ant26: ''
    ant27: ''
    ant28: ''
    ant29: ''
    ant3: ''
    ant30: ''
    ant31: ''
    ant4: ''
    ant5: ''
    ant6: ''
    ant7: ''
    ant8: ''
    ant9: ''
    args: deviceid
    bb_gain0: bbgain
    bb_gain1: '20'
    bb_gain10: '20'
    bb_gain11: '20'
    bb_gain12: '20'
    bb_gain13: '20'
    bb_gain14: '20'
    bb_gain15: '20'
    bb_gain16: '20'
    bb_gain17: '20'
    bb_gain18: '20'
    bb_gain19: '20'
    bb_gain2: '20'
    bb_gain20: '20'
    bb_gain21: '20'
    bb_gain22: '20'
    bb_gain23: '20'
    bb_gain24: '20'
    bb_gain25: '20'
    bb_gain26: '20'
    bb_gain27: '20'
    bb_gain28: '20'
    bb_gain29: '20'
    bb_gain3: '20'
    bb_gain30: '20'
    bb_gain31: '20'
    bb_gain4: '20'
    bb_gain5: '20'
    bb_gain6: '20'
    bb_gain7: '20'
    bb_gain8: '20'
    bb_gain9: '20'
    bw0: '0'
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    clock_source0: ''
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    corr0: '0'
    corr1: '0'
    corr10: '0'
    corr11: '0'
    corr12: '0'
    corr13: '0'
    corr14: '0'
    corr15: '0'
    corr16: '0'
    corr17: '0'
    corr18: '0'
    corr19: '0'
    corr2: '0'
    corr20: '0'
    corr21: '0'
    corr22: '0'
    corr23: '0'
    corr24: '0'
    corr25: '0'
    corr26: '0'
    corr27: '0'
    corr28: '0'
    corr29: '0'
    corr3: '0'
    corr30: '0'
    corr31: '0'
    corr4: '0'
    corr5: '0'
    corr6: '0'
    corr7: '0'
    corr8: '0'
    corr9: '0'
    dc_offset_mode0: '0'
    dc_offset_mode1: '0'
    dc_offset_mode10: '0'
    dc_offset_mode11: '0'
    dc_offset_mode12: '0'
    dc_offset_mode13: '0'
    dc_offset_mode14: '0'
    dc_offset_mode15: '0'
    dc_offset_mode16: '0'
    dc_offset_mode17: '0'
    dc_offset_mode18: '0'
    dc_offset_mode19: '0'
    dc_offset_mode2: '0'
    dc_offset_mode20: '0'
    dc_offset_mode21: '0'
    dc_offset_mode22: '0'
    dc_offset_mode23: '0'
    dc_offset_mode24: '0'
    dc_offset_mode25: '0'
    dc_offset_mode26: '0'
    dc_offset_mode27: '0'
    dc_offset_mode28: '0'
    dc_offset_mode29: '0'
    dc_offset_mode3: '0'
    dc_offset_mode30: '0'
    dc_offset_mode31: '0'
    dc_offset_mode4: '0'
    dc_offset_mode5: '0'
    dc_offset_mode6: '0'
    dc_offset_mode7: '0'
    dc_offset_mode8: '0'
    dc_offset_mode9: '0'
    freq0: freq
    freq1: 100e6
    freq10: 100e6
    freq11: 100e6
    freq12: 100e6
    freq13: 100e6
    freq14: 100e6
    freq15: 100e6
    freq16: 100e6
    freq17: 100e6
    freq18: 100e6
    freq19: 100e6
    freq2: 100e6
    freq20: 100e6
    freq21: 100e6
    freq22: 100e6
    freq23: 100e6
    freq24: 100e6
    freq25: 100e6
    freq26: 100e6
    freq27: 100e6
    freq28: 100e6
    freq29: 100e6
    freq3: 100e6
    freq30: 100e6
    freq31: 100e6
    freq4: 100e6
    freq5: 100e6
    freq6: 100e6
    freq7: 100e6
    freq8: 100e6
    freq9: 100e6
    gain0: rfgain
    gain1: '10'
    gain10: '10'
    gain11: '10'
    gain12: '10'
    gain13: '10'
    gain14: '10'
    gain15: '10'
    gain16: '10'
    gain17: '10'
    gain18: '10'
    gain19: '10'
    gain2: '10'
    gain20: '10'
    gain21: '10'
    gain22: '10'
    gain23: '10'
    gain24: '10'
    gain25: '10'
    gain26: '10'
    gain27: '10'
    gain28: '10'
    gain29: '10'
    gain3: '10'
    gain30: '10'
    gain31: '10'
    gain4: '10'
    gain5: '10'
    gain6: '10'
    gain7: '10'
    gain8: '10'
    gain9: '10'
    gain_mode0: 'False'
    gain_mode1: 'False'
    gain_mode10: 'False'
    gain_mode11: 'False'
    gain_mode12: 'False'
    gain_mode13: 'False'
    gain_mode14: 'False'
    gain_mode15: 'False'
    gain_mode16: 'False'
    gain_mode17: 'False'
    gain_mode18: 'False'
    gain_mode19: 'False'
    gain_mode2: 'False'
    gain_mode20: 'False'
    gain_mode21: 'False'
    gain_mode22: 'False'
    gain_mode23: 'False'
    gain_mode24: 'False'
    gain_mode25: 'False'
    gain_mode26: 'False'
    gain_mode27: 'False'
    gain_mode28: 'False'
    gain_mode29: 'False'
    gain_mode3: 'False'
    gain_mode30: 'False'
    gain_mode31: 'False'
    gain_mode4: 'False'
    gain_mode5: 'False'
    gain_mode6: 'False'
    gain_mode7: 'False'
    gain_mode8: 'False'
    gain_mode9: 'False'
    if_gain0: '20'
    if_gain1: '20'
    if_gain10: '20'
    if_gain11: '20'
    if_gain12: '20'
    if_gain13: '20'
    if_gain14: '20'
    if_gain15: '20'
    if_gain16: '20'
    if_gain17: '20'
    if_gain18: '20'
    if_gain19: '20'
    if_gain2: '20'
    if_gain20: '20'
    if_gain21: '20'
    if_gain22: '20'
    if_gain23: '20'
    if_gain24: '20'
    if_gain25: '20'
    if_gain26: '20'
    if_gain27: '20'
    if_gain28: '20'
    if_gain29: '20'
    if_gain3: '20'
    if_gain30: '20'
    if_gain31: '20'
    if_gain4: '20'
    if_gain5: '20'
    if_gain6: '20'
    if_gain7: '20'
    if_gain8: '20'
    if_gain9: '20'
    iq_balance_mode0: '0'
    iq_balance_mode1: '0'
    iq_balance_mode10: '0'
    iq_balance_mode11: '0'
    iq_balance_mode12: '0'
    iq_balance_mode13: '0'
    iq_balance_mode14: '0'
    iq_balance_mode15: '0'
    iq_balance_mode16: '0'
    iq_balance_mode17: '0'
    iq_balance_mode18: '0'
    iq_balance_mode19: '0'
    iq_balance_mode2: '0'
    iq_balance_mode20: '0'
    iq_balance_mode21: '0'
    iq_balance_mode22: '0'
    iq_balance_mode23: '0'
    iq_balance_mode24: '0'
    iq_balance_mode25: '0'
    iq_balance_mode26: '0'
    iq_balance_mode27: '0'
    iq_balance_mode28: '0'
    iq_balance_mode29: '0'
    iq_balance_mode3: '0'
    iq_balance_mode30: '0'
    iq_balance_mode31: '0'
    iq_balance_mode4: '0'
    iq_balance_mode5: '0'
    iq_balance_mode6: '0'
    iq_balance_mode7: '0'
    iq_balance_mode8: '0'
    iq_balance_mode9: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '1'
    num_mboards: '1'
    sample_rate: samp_rate
    sync: sync
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [0, 236.0]
    rotation: 0
    state: enabled
- name: outfile
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Output File
    short_id: O
    type: str
    value: '"/tmp/logfile.csv"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1192, 36.0]
    rotation: 0
    state: true
- name: rfgain
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: RF-Gain
    short_id: g
    type: intx
    value: '40'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [520, 32]
    rotation: 0
    state: enabled
- name: runtime
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: ''
    short_id: R
    type: intx
    value: '3590'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [320, 328.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Sample Rate
    short_id: s
    type: eng_float
    value: 2e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [872, 32]
    rotation: 0
    state: enabled
- name: specmon_block
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\n#from __future__ import\
      \ print_function\nimport numpy as np\nfrom gnuradio import gr\nimport time\n\
      \n\nclass blk(gr.sync_block):  # other base classes are basic_block, decim_block,\
      \ interp_block\n    \"\"\"Specmon data analysis block. \n    This block is the\
      \ improved version for specmon\n    \"\"\"\n\n\t# Don't use \"logfile\" as varname\
      \ as it's reserved in GRC\n    def __init__(self, fftsize=1024, start_state=0,\
      \ threshold=1.0, verbose=0, reportfile=\"/tmp/logfile.csv\"):  # only default\
      \ arguments here\n        \"\"\"arguments to this function show up as parameters\
      \ in GRC\"\"\"\n        self.fftsize = fftsize\n        self.start_state = start_state\n\
      \        self.threshold = threshold\n        self.verbose = verbose\n      \
      \  self.maxval = 0\n        self.sumval = 0\n        self.lowcounter = 1\n \
      \       self.reportfile = reportfile\n        gr.sync_block.__init__(\n    \
      \        self,\n            name='Specmon2',   # will show up in GRC\n     \
      \       in_sig=[(np.float32,self.fftsize)],\n            out_sig=None\n    \
      \    )\n        # Print startline\n        self.outfile = open(reportfile, \"\
      a\")\n        print (\"S,%.2f,H,%s,T,%.2f\" % ( time.time(), str(time.strftime(\"\
      %H\")), threshold ), file=self.outfile, flush=True )\n        \n    def work(self,\
      \ input_items, output_items):\n        speclist = np.array(input_items[0][0])\n\
      \        # Peak for max-value\n        curval = np.amax(speclist)\n        #\
      \ Median for median noise level\n        noiseval = np.median(speclist)\n  \
      \      if self.verbose == 1:\n            #print (\"%.2f\" % curval)\n     \
      \       print (\"Current value: %.2f M %1.2f N %i S %.3f\" % ( curval, self.maxval,\
      \ self.lowcounter, self.sumval ) )\n           \n        if curval > self.maxval:\n\
      \            self.maxval = curval\n        \n        if curval > self.threshold\
      \ and self.start_state == 0:\n            # Signal triggers the threshold\n\
      \            self.start_state = 1\n            lowavg = self.sumval / self.lowcounter\n\
      \            #print (\"A,%.2f,%.2f,\" % ( curval, time.time() ), end=\"\" )\n\
      \            print (\"A,%.2f,%.2f,\" % ( lowavg, time.time() ), end=\"\", file=self.outfile\
      \ )\n        elif curval < self.threshold and self.start_state == 1:\n     \
      \       # Signal drops below threshold\n            #print (\"U,%.2f,%.2f\"\
      \ % ( curval, time.time() ), end=\"\\n\")\n            print (\"U,%.2f,%.2f\"\
      \ % ( self.maxval, time.time() ), end=\"\\n\", file=self.outfile, flush=True)\n\
      \            self.start_state = 0\n            self.sumval = 0\n           \
      \ self.lowcounter = 1\n            self.maxval = 0            \n        else:\n\
      \            # Signal remains under threshold\n            #self.sumval += curval\n\
      \            self.sumval += noiseval\n            self.lowcounter += 1\n\t\t\
      \t\n        \n        return len(input_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    fftsize: fftsize
    maxoutbuf: '0'
    minoutbuf: '0'
    reportfile: outfile
    start_state: start_state
    threshold: threshold
    verbose: verbose
  states:
    _io_cache: ('Specmon2', 'blk', [('fftsize', '1024'), ('start_state', '0'), ('threshold',
      '1.0'), ('verbose', '0'), ('reportfile', "'/tmp/logfile.csv'")], [('0', 'float',
      1024)], [], 'Specmon data analysis block. \n    This block is the improved version
      for specmon\n    ', ['fftsize', 'reportfile', 'start_state', 'threshold', 'verbose'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 516.0]
    rotation: 180
    state: enabled
- name: threshold
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Threshold
    short_id: T
    type: eng_float
    value: '.1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [752, 32]
    rotation: 0
    state: enabled
- name: verbose
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Print verbose values
    short_id: v
    type: intx
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1016, 32]
    rotation: 0
    state: enabled

connections:
- [blocks_add_xx_0, '0', specmon_block, '0']
- [blocks_complex_to_mag_squared_0, '0', blocks_integrate_xx_0, '0']
- [blocks_file_source_0, '0', blocks_add_xx_0, '1']
- [blocks_head_0, '0', blocks_moving_average_xx_0, '0']
- [blocks_head_0, '0', blocks_sub_xx_0, '0']
- [blocks_integrate_xx_0, '0', blocks_multiply_const_vxx_0, '0']
- [blocks_moving_average_xx_0, '0', blocks_sub_xx_0, '1']
- [blocks_multiply_const_vxx_0, '0', blocks_nlog10_ff_0, '0']
- [blocks_nlog10_ff_0, '0', blocks_add_xx_0, '0']
- [blocks_nlog10_ff_0, '0', blocks_file_sink_0, '0']
- [blocks_stream_to_vector_0, '0', fft_vxx_0, '0']
- [blocks_sub_xx_0, '0', blocks_stream_to_vector_0, '0']
- [fft_vxx_0, '0', blocks_complex_to_mag_squared_0, '0']
- [osmosdr_source_0, '0', blocks_head_0, '0']

metadata:
  file_format: 1
